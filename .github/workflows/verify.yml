name: verify

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  verify:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        id: ['00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19']

    steps:
      - name: Git checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12.0

      - name: Install oj-verify
        run: pip3 install -U online-judge-verify-helper

      - name: Assign test files
        working-directory: main
        run: |
          TEST_FILES=$(
            find verify -type f -name '*.test.cpp' | \
            sort | \
            awk -v n=${{ strategy.job-total }} \
                -v i=${{ strategy.job-index }} \
                '{
                  if((NR - 1) % n == i) {
                    print $0
                  }
                }' \
            )

          echo ${TEST_FILES} > .verify-helper/targets.txt
          cat .verify-helper/targets.txt

      - name: Cache judge data
        if: ${{ !cancelled() && github.ref_name == github.event.repository.default_branch }}
        id: cache-judge
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/online-judge-tools/library-checker-problems/
            main/.verify-helper/cache/
          key: verify-${{ hashFiles('main/verify/**/*.test.cpp', 'main/.verify-helper/targets.txt') }}

      - name: Run tests
        working-directory: main
        env:
          CACHE_HIT: ${{ steps.cache-judge.outputs.cache-hit }}
          YUKICODER_TOKEN: ${{ secrets.YUKICODER_TOKEN }}
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          set -eu
          if [ ! -f ./.verify-helper/timestamps.remote.json ] || [ "${CACHE_HIT}" != 'true' ]; then
            echo '{}' > ./.verify-helper/timestamps.remote.json
          fi
          oj d https://judge.yosupo.jp/problem/aplusb &> /dev/null
          PARALLEL=$(nproc)
          echo "Parallel execution: ${PARALLEL}"
          head -c -1 ./.verify-helper/targets.txt | \
          xargs -P ${PARALLEL} -d ' ' -I {} bash ./.github/workflows/run-test.sh {}
          jq --slurp --sort-keys 'reduce .[] as $item ({}; . * $item)' \
          ./.verify-helper/timestamps.json > "./.verify-helper/timestamps-${{ matrix.id }}.json"
          cat "./.verify-helper/timestamps-${{ matrix.id }}.json"

      - name: Save timestamps
        uses: actions/upload-artifact@v3
        if: ${{ !cancelled() }}
        with:
          name: timestamps
          path: main/.verify-helper/timestamps-${{ matrix.id }}.json

  post-verify:
    runs-on: ubuntu-latest
    needs: verify
    if: ${{ !cancelled() && github.ref_name == github.event.repository.default_branch }}

    steps:
      - name: Git checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          sparse-checkout: .verify-helper

  gen-docs:
    runs-on: ubuntu-latest
    needs: post-verify
    if: ${{ !cancelled() && github.ref_name == github.event.repository.default_branch }}

    steps:
      - name: Git checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          path: main

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12.0

      - name: Install oj-verify
        run: pip3 install -U online-judge-verify-helper

      - name: Git pull
        working-directory: main
        run: git pull

      - name: Generate documentation
        working-directory: main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_PAT: ${{ secrets.GH_PAT }}
        run: rm -r /home/runner/work/_temp/
